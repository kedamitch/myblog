//静态资源模块，用于返回服务端的js、css、图片等静态资源
var rp = require('fatfei.provider.loader');
var util = require('util');
var filehandler = rp.filehandler;
var fs = require('fs');
var url = require('url');
var settings;

var staticService = {

    requestSrc: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            try {
                var pathname = url.parse(ctx.request.url, true).pathname;
                pathname = require('path').normalize(pathname.replace(/\.\./g, ""));
            } catch (e) {
                console.error('parse request url error:' + ctx.request.url);
            }
            var path = settings.staticPath + pathname.substring(7);
            console.info(path);
            filehandler.responseFile(path, ctx);
        });
    },

    createProvider: function(config) {
        settings = config;
        return staticService;
    },

    //注册静态资源路由
    onRegister: function(router) {
        var staticPath = settings.staticPath; //静态资源路径
        router.addHandler('/static', staticService.requestSrc);
        //加载html模板
        var tmplPath = settings.tmplPath; //页面模板路径
        (function loadTmpl(url) {
            fs.readdir(url, function(err, files) {
                if (err) {
                    console.error(util.inspect(err));
                } else {
                    for (var i = 0; i < files.length; i++) {
                        (function(filename) {
                            fs.stat(filename, function(err, stat) {
                                if (err) return;
                                if (stat.isDirectory()) {
                                    loadTmpl(filename);
                                } else if (filename.match(/.*\.html$/)) {
                                    var routername = filename.substring(tmplPath.length);
                                    console.info('register tmpl on ' + routername);
                                    router.addHandler(routername, function(ctx) {
                                        filehandler.responseFile(filename, ctx);
                                    });
                                }
                            });
                        })(url + '/' + files[i]);
                    }
                }
            });
        })(tmplPath);
    }
}

module.exports = staticService;