var rp = require('fatfei.provider.loader');
var util = require('util');
var userService = rp.user;
var commonUtil = require('fatfei.common.util');
var blogRedis = rp.dao.blogRedis;

var blog = {

    pubPost: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var title = fields.title,
                content = fields.content,
                abstract = fields.abstract,
                tags = fields.tags;
            if (!title || !content || !abstract) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                } else {
                    tags = (tags || "").split(',');
                    var postId = commonUtil.generateTimeBasedId();
                    var postInfo = {
                        id: postId,
                        title: title,
                        author: userInfo.username,
                        abstract: abstract,
                        content: content,
                        time: Date.now(),
                        tags: tags,
                        viewCount: 0,
                        commentCount: 0
                    };
                    blogRedis.addPostById(postId, postInfo, function(err) {
                        if (err) {
                            ctx.responseData({
                                err: 1200,
                                data: 'add post fails: ' + util.inspect(err)
                            });
                            return;
                        }
                        blogRedis.addPostIdToList(postId, function(err) {
                            if (err) {
                                ctx.responseData({
                                    err: 1200,
                                    data: 'add post fails: ' + util.inspect(err)
                                });
                                return;
                            }
                            ctx.responseData({
                                err: 0,
                                data: {
                                    msg: "success",
                                    id: postId
                                }
                            });
                        });
                    });
                }
            });
        });
    },

    editPost: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var postId = fields.postId,
                title = fields.title,
                content = fields.content,
                abstract = fields.abstract,
                tags = fields.tags || "";
            if (!postId || !title || !content || !abstract) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                } else {
                    tags = tags.split(',');
                    var postInfo = {
                        title: title,
                        abstract: abstract,
                        content: content,
                        updateTime: Date.now(),
                        tags: tags
                    };
                    blogRedis.addPostById(postId, postInfo, function(err) {
                        if (err) {
                            ctx.responseData({
                                err: 1200,
                                data: 'add post fails: ' + util.inspect(err)
                            });
                            return;
                        }
                        ctx.responseData({
                            err: 0,
                            data: "success"
                        });
                    });
                }
            });
        });
    },

    getPosts: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var startId = fields.start,
                count = parseInt(fields.count || 10);
            blogRedis.getPostIdList(startId, count, function(err, ids) {
                if (err) {
                    ctx.responseData({
                        err: 1200,
                        data: 'get posts fails: ' + util.inspect(err)
                    });
                    return;
                }

                blogRedis.getPostsByIds(ids, function(err, posts) {
                    if (err) {
                        ctx.responseData({
                            err: 1200,
                            data: 'get posts fails: ' + util.inspect(err)
                        });
                    } else {
                        blogRedis.getPostCount(function(err, totalCount) {
                            if (err) {
                                ctx.responseData({
                                    err: 1200,
                                    data: 'get post count fails: ' + util.inspect(err)
                                });
                            } else {
                                ctx.responseData({
                                    err: 0,
                                    data: {
                                        total: totalCount,
                                        posts: posts
                                    }
                                });
                            }
                        });
                    }
                });
            });
        });
    },

    incvv: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var postId = fields.postId;
            if (!postId) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                }
                blogRedis.incVV(postId, 1, function(err) {
                    if (err) {
                        ctx.responseData({
                            err: 1200,
                            data: util.inspect(err)
                        });
                    } else {
                        ctx.responseData({
                            err: 0,
                            data: 'success'
                        });
                    }
                });
            });
        });
    },

    deletePost: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var postId = fields.postId;
            if (!postId) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                } else {
                    blogRedis.delPostById(postId, function(err) {
                        if (err) {
                            ctx.responseData({
                                err: 1200,
                                data: 'del post fails: ' + util.inspect(err)
                            });
                        } else {
                            ctx.responseData({
                                err: 0,
                                data: 'success'
                            });
                        }
                    });
                }
            });
        });
    },

    comment: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var postId = fields.postId,
                content = fields.content;
            if (!postId || !content) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                } else {
                    var commentId = commonUtil.generateTimeBasedId();
                    var commentInfo = {
                        id: commentId,
                        author: userInfo.username,
                        postId: postId,
                        content: content,
                        time: Date.now()
                    };
                    blogRedis.addComment(postId, commentInfo, function(err) {
                        if (err) {
                            ctx.responseData({
                                err: 1200,
                                data: 'add comments fails: ' + util.inspect(err)
                            });
                        } else {
                            //文章评论数增加1
                            blogRedis.incCV(postId, 1);
                            ctx.responseData({
                                err: 0,
                                data: {
                                    msg: 'success',
                                    id: commentId
                                }
                            });
                        }
                    });
                }
            });
        });
    },

    getComments: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var startId = fields.start,
                count = parseInt(fields.count || 10),
                postId = fields.postId;
            if (!postId) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            blogRedis.getComments(postId, startId, count, function(err, comments) {
                if (err) {
                    ctx.responseData({
                        err: 1200,
                        data: 'get comments fails: ' + util.inspect(err)
                    });
                    return;
                }
                blogRedis.getCommentCount(postId, function(err, count) {
                    if (err) {
                        ctx.responseData({
                            err: 1200,
                            data: 'get comments count fails: ' + util.inspect(err)
                        });
                        return;
                    }
                    ctx.responseData({
                        err: 0,
                        data: {
                            total: count,
                            comments: comments
                        }
                    });
                });
            });
        });
    },

    deleteComment: function(ctx) {
        ctx.getRequestArgs(function(err, fields, files, cookies) {
            var commentId = fields.commentId,
                postId = fields.postId;
            if (!commentId || !postId) {
                ctx.responseData({
                    err: 1001,
                    data: 'invalid paramters'
                });
                return;
            }
            userService.validateInternal(cookies, function(isValid, userInfo) {
                if (!isValid) {
                    ctx.responseData({
                        err: 1002,
                        data: '请先登录'
                    });
                } else {
                    blogRedis.deleteComment(postId, commentId, function(err) {
                        if (err) {
                            ctx.responseData({
                                err: 1200,
                                data: 'delete comments fails: ' + util.inspect(err)
                            });
                        } else {
                            //文章评论数增加-1
                            blogRedis.incCV(postId, -1);
                            ctx.responseData({
                                err: 0,
                                data: 'success'
                            });
                        }
                    });
                }
            });
        });
    },

    //注册路由
    onRegister: function(router) {
        router.addHandler('/blog/getPosts', blog.getPosts);
        router.addHandler('/blog/pubPost', blog.pubPost);
        router.addHandler('/blog/editPost', blog.editPost);
        router.addHandler('/blog/deletePost', blog.deletePost);
        router.addHandler('/blog/view', blog.incvv);
        router.addHandler('/blog/comment', blog.comment);
        router.addHandler('/blog/getComments', blog.getComments);
        router.addHandler('/blog/deleteComment', blog.deleteComment);
    }
};

module.exports = blog;